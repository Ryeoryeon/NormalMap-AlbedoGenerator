#version 330 core

// Interpolated values from the vertex shaders
in vec3 fragmentColor;
in vec3 Position_worldspace;
in vec3 Normal_cameraspace;
in vec3 EyeDirection_cameraspace;
in vec3 LightDirection_cameraspace;
in vec3 Normal;

// Ouput data
out vec3 color;

// Values that stay constant for the whole mesh.
//uniform mat4 MV;
uniform vec3 LightPosition_worldspace;

void main(){

	// Light emission properties
	// You probably want to put them as uniforms
	vec3 LightColor = vec3(1,1,1);
	float LightPower = 5000.0f;
	
	// Material properties
	//vec3 MaterialDiffuseColor = texture( myTextureSampler, UV ).rgb;
	vec3 MaterialDiffuseColor = fragmentColor;
	vec3 MaterialAmbientColor = vec3(0.85,0.85,0.85) * MaterialDiffuseColor;
	vec3 MaterialSpecularColor = vec3(0.15,0.15,0.15);

	// Distance to the light
	float distance = length( LightPosition_worldspace - Position_worldspace );
	
	//color = fragmentColor;
	color = Normal;

}